

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.achievements_service import AchievementsService
from database.database_service import db_service
from datetime import datetime

def test_achievements():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...")

    test_user_id = "test_user_123"
    
    print("\n1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ —Ç–µ—Å—Ç—ã...")

    unlocked = AchievementsService.check_test_achievements(test_user_id, 1)
    print(f"   –ü–µ—Ä–≤—ã–π —Ç–µ—Å—Ç: {len(unlocked)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ")
    
    unlocked = AchievementsService.check_test_achievements(test_user_id, 10)
    print(f"   10 —Ç–µ—Å—Ç–æ–≤: {len(unlocked)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ")
    
    unlocked = AchievementsService.check_test_achievements(test_user_id, 25)
    print(f"   25 —Ç–µ—Å—Ç–æ–≤: {len(unlocked)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ")
    
    print("\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏...")

    unlocked = AchievementsService.check_ai_achievements(test_user_id, 1)
    print(f"   –ü–µ—Ä–≤–∞—è –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: {len(unlocked)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ")
    
    unlocked = AchievementsService.check_ai_achievements(test_user_id, 5)
    print(f"   5 –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: {len(unlocked)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ")
    
    print("\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∑–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ...")

    unlocked = AchievementsService.check_favorites_achievements(test_user_id, 1)
    print(f"   –ü–µ—Ä–≤–æ–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: {len(unlocked)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ")
    
    unlocked = AchievementsService.check_favorites_achievements(test_user_id, 5)
    print(f"   5 –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö: {len(unlocked)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ")
    
    print("\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è...")

    test_time = datetime.now()
    unlocked = AchievementsService.check_special_achievements(test_user_id, test_time, 25)
    print(f"   –°–ø–∏–¥—Ä–∞–Ω–Ω–µ—Ä (25 —Å–µ–∫): {len(unlocked)} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ")
    
    print("\n5. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    achievements = AchievementsService.get_user_achievements(test_user_id)
    print(f"   –í—Å–µ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {len(achievements)}")
    
    if achievements:
        print("   –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:")
        for achievement in achievements[:3]:
            print(f"     {achievement['icon']} {achievement['name']} - {achievement['description']}")
    
    print("\n6. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...")
    
    stats = AchievementsService.get_achievements_stats(test_user_id)
    print(f"   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {stats['total_achievements']}")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {stats['categories']}")
    
    if stats['last_achievement']:
        print(f"   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: {stats['last_achievement']['name']}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_achievements() 